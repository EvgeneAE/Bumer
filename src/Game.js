// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ.

const Hero = require('./game-models/Hero');
const Enemy = require('./game-models/Enemy');
const View = require('./View');
const Score = require('./Score');
const runInteractiveConsole = require('./keyboard');
const Situation = require('./game-models/Situation');
const { prompt } = require('enquirer');

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –∏–≥—Ä—ã.
// –¢—É—Ç –±—É–¥—É—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–ø—É—Å–∫.

class Game {
  constructor({ trackLength, name }) {
    this.trackLength = trackLength;
    this.hero = new Hero();
    this.enemy = new Enemy();
    this.view = new View();
    this.situation = new Situation();
    this.score = new Score(name);
    this.track = [];
    this.regenerateTrack(this.hero.vertical);
    this.name = name;
  }

  static async rules() {
    await prompt({
      type: 'input',
      name: 'name',
      message: `–ü—Ä–∏–≤–µ—Ç –º–∞–ª–µ–Ω—å–∫–∏–π –ª—é–±–∏—Ç–µ–ª—å –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏.
  –ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π —ç–ø–∏–∫-–≥–µ–π–º, –≤ –∫–æ—Ç–æ—Ä–æ–π —É —Ç–µ–±—è –ª–∏—à—å –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞ - –º–æ—á–∏—Ç—å –≤—Å–µ, —á—Ç–æ –¥–≤–∏–∂–µ—Ç—Å—è. 
  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 
    'd' - –≤–ø–µ—Ä–µ–¥;
    'a' - –Ω–∞–∑–∞–¥; 
    'w' - –≤–≤–µ—Ä—Ö; 
    's' - –≤–Ω–∏–∑; 
    'o' –∏–ª–∏ 'p' - –º–æ—á–∏ –±—É–º–µ—Ä–∞–Ω–≥–æ–º;
  P.S: –ù–∞–±–µ—Ä–∏ 1000 –æ—á–∫–æ–≤ –∏ –æ—Ç–∫—Ä–æ–π –ø–∞—Å—Ö–∞–ª–æ—á–∫—É –Ω–∞ —Ñ–∏–ª—å–º.
  –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∂–º–∏ Enter`,
    });
  }

  static async whoIsPlayer() {
    const userName = await prompt({
      type: 'input',
      name: 'name',
      message: '–û–±–∑–æ–≤–∏ —Å–µ–±—è:',
    });
    return userName;
  }

  // –û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –¥–≤–∏–∂–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏ –≤—Ä–∞–≥–æ–≤
  regenerateTrack(heroVertical) {
    // –ú–∞—Å—Å–∏–≤ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –∏ –æ—Ä—É–∂–∏—è –Ω–∞ –Ω–µ–º
    this.track = [
      new Array(this.trackLength).fill(' '),
      new Array(this.trackLength).fill(' '),
      new Array(this.trackLength).fill(' '),
      new Array(this.trackLength).fill(' '),
    ];
    this.track[heroVertical][this.hero.horizontal] = this.hero.skin;
    this.track[heroVertical][this.hero.boomerang.horizontal] =
      this.hero.boomerang.skin;

    // —á—Ç–æ–±—ã –≤—Ä–∞–≥–∏ –Ω–µ —Å–º–µ—â–∞–ª–∏—Å—å –æ—Ç –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è –∏ –∞—Ç–∞–∫ –≥–µ—Ä–æ—è
    if (this.enemy.vertical === heroVertical) {
      if (
        this.hero.boomerang.vertical === this.enemy.vertical &&
        this.hero.boomerang.horizontal > this.hero.horizontal
      ) {
        this.track[this.enemy.vertical][this.enemy.horizontal - 2] =
          this.enemy.skin;
      } else {
        this.track[this.enemy.vertical][this.enemy.horizontal - 1] =
          this.enemy.skin;
      }
    } else {
      this.track[this.enemy.vertical][this.enemy.horizontal - 1] =
        this.enemy.skin;
    }

    // —á—Ç–æ–±—ã —Ä—è–¥ –º–∞—à–∏–Ω –Ω–µ —Å–º–µ—â–∞–ª—Å—è –æ—Ç –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è –∏ –∞—Ç–∞–∫ –≥–µ—Ä–æ—è
    for (let i = 0; i < this.track.length; i++) {
      if (heroVertical === i) {
        if (this.hero.boomerang.horizontal > this.hero.horizontal) {
          this.track[i][this.situation.horizontal - 1] = this.situation.skin;
        } else {
          this.track[i][this.situation.horizontal] = this.situation.skin;
        }
      } else {
        this.track[i][this.situation.horizontal] = this.situation.skin;
      }
    }

    // –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å–º–µ—Ä—Ç–∏ –≤—Ä–∞–≥–∞ –ø—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏ –±—É–º–µ—Ä–∞–Ω–≥–∞
    const verticalCheck = this.enemy.vertical === this.hero.vertical;
    if (
      this.hero.boomerang.horizontal >= this.enemy.horizontal &&
      verticalCheck
    ) {
      this.track[this.enemy.vertical][this.enemy.horizontal - 2] = 'üí•';
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è (—É–±–∏—Ç—ã–µ –≤—Ä–∞–≥–∏, —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö, —É–±–∏—Ç—ã–π –≥–µ—Ä–æ–π)
  check() {
    const verticalCheck = this.enemy.vertical === this.hero.vertical;

    // —É–±–∏–π—Å—Ç–≤–æ –≤—Ä–∞–≥–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ
    if (
      this.hero.boomerang.horizontal >= this.enemy.horizontal &&
      verticalCheck &&
      this.score.scoreNumber < 1000
    ) {
      this.score.plusScore();
      setTimeout(() => {
        this.enemy.die();
        this.enemy = new Enemy();
      }, 0);
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤—Ä–∞–≥–∞ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–º –≤—Ä–∞–≥–æ–º –Ω–∞—á–∞–ª–∞ –ø–æ–ª—è
    if (this.enemy.horizontal <= 0 && this.score.scoreNumber < 1000) {
      this.enemy = new Enemy();
    }
    // –ø–æ–∑–∏—Ü–∏—è –±—É–º–µ—Ä–∞–Ω–≥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if (this.hero.horizontal >= this.hero.boomerang.horizontal) {
      this.hero.boomerang.horizontal = -1;
    }
    // —Å–º–µ—Ä—Ç—å –≥–µ—Ä–æ—è
    if (
      (this.hero.horizontal === this.enemy.horizontal && verticalCheck) ||
      this.hero.horizontal === this.situation.horizontal
    ) {
      if (this.score.scoreNumber < 1000) {
        this.hero.die(this.score.scoreNumber, this.score.name);
        setTimeout(() => {
          process.exit();
        }, 0);
      }
      if (this.score.scoreNumber >= 1000) {
        setTimeout(() => {
          process.exit();
        }, 100);
      }
    }
  }

  play() {
    // –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ keypress –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–µ—Ä–æ–µ–º –∏ –±—É–º–µ—Ä–∞–Ω–≥–æ–º
    runInteractiveConsole(this.hero, this.track);
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–≥—Ä—ã, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞
    // –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –∫–∞–∂–¥—ã–µ 10–º—Å
    setInterval(() => {
      this.check();
      this.regenerateTrack(this.hero.vertical);
      this.view.render(this.track, this.score.scoreNumber, this.score.name);
    }, 10);

    // –ó–∞–¥–∞–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è –≤—Ä–∞–≥–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞–±—Ä–∞–Ω–Ω—ã—Ö –æ—á–∫–æ–≤
    // –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª–æ—á–∫–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 1000 –æ—á–∫–æ–≤
    const enemyMove = setInterval(() => {
      if (this.score.scoreNumber >= 300 && this.score.scoreNumber < 700) {
        clearInterval(enemyMove);
        const enemyMove2 = setInterval(() => {
          if (this.score.scoreNumber >= 700 && this.score.scoreNumber < 1000) {
            clearInterval(enemyMove2);
            const enemyMove3 = setInterval(() => {
              if (this.score.scoreNumber >= 1000) {
                clearInterval(enemyMove3);
                this.enemy.skin = '';
                this.situation.horizontal = 50;
                this.situation.moveLeft();
              }
              this.enemy.moveLeft();
            }, 15);
          }
          this.enemy.moveLeft();
        }, 35);
      }
      this.enemy.moveLeft();
    }, 50);
  }
  // C–ö–û–†–û–°–¢–¨ –ü–ï–†–ï–î–í–ò–ñ–ï–ù–ò–Ø –í–†–ê–ì–û–í –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ú–ï–ù–¨–®–ï –°–ö–û–†–û–°–¢–ò (–í–†–ï–ú–ï–ù–ò)
  // –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ò–ì–†–û–í–û–ì–û –ü–û–õ–Ø
}

module.exports = Game;
